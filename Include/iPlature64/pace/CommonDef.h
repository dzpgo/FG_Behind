// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

// <auto-generated>
//
// Generated from file `CommonDef.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>

#ifndef __pace___CommonDef_h__
#define __pace___CommonDef_h__

#include <Ice/LocalObjectF.h>
#include <Ice/ProxyF.h>
#include <Ice/ObjectF.h>
#include <Ice/Exception.h>
#include <Ice/LocalObject.h>
#include <IceUtil/ScopedArray.h>
#include <Ice/UndefSysMacros.h>

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION / 100 != 304
#       error Ice version mismatch!
#   endif
#   if ICE_INT_VERSION % 100 > 50
#       error Beta header file detected
#   endif
#   if ICE_INT_VERSION % 100 < 1
#       error Ice patch level mismatch!
#   endif
#endif

namespace iPlature
{

const ::Ice::Int IPLATURESUCCESS = 0;

typedef ::std::vector< ::Ice::Int> IntSeq;

typedef ::std::vector< ::Ice::Float> FloatSeq;

typedef ::std::vector< ::std::string> StringSeq;

typedef ::std::vector< ::Ice::Long> LongSeq;

typedef ::std::vector< ::Ice::Double> DoubleSeq;

typedef ::std::map< ::Ice::Int, ::iPlature::IntSeq> IntSeqMap;
void __writeIntSeqMap(::IceInternal::BasicStream*, const IntSeqMap&);
void __readIntSeqMap(::IceInternal::BasicStream*, IntSeqMap&);

}

#endif
